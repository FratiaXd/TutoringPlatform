@page "/admin/adminpages/feedbackdashboard"
@rendermode InteractiveServer
<h3>Feedback Dashboard</h3>

<h4>Awaiting Feedback:</h4>

<table class="table">
    <thead>
        <tr>
            <th>Course ID</th>
            <th>User</th>
            <th>Lesson Title</th>
            <th>Status</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var record in AwaitingFeedback)
        {
            <tr>
                <td>@record.Lesson.CourseId</td>
                <td>@record.User.Email</td>
                <td>@record.Lesson.LessonTitle</td>
                <td>@record.FeedbackStatus</td>
                <td><button class="btn btn-primary" @onclick="() => ProcessFeedback(record.LessonProgressId)">Open</button></td>
            </tr>
        }
    </tbody>
</table>

<br />
<h4>Feedback History:</h4>

<table class="table">
    <thead>
        <tr>
            <th>Course ID</th>
            <th>User</th>
            <th>Lesson Title</th>
            <th>Status</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var record in FeedbackHistory)
        {
            <tr>
                <td>@record.Lesson.CourseId</td>
                <td>@record.User.Email</td>
                <td>@record.Lesson.LessonTitle</td>
                <td>@record.FeedbackStatus</td>
                <td><button class="btn btn-primary" @onclick="() => ProcessFeedback(record.LessonProgressId)">View</button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<LessonProgress> AwaitingFeedback { get; set; } = new List<LessonProgress>();
    private List<LessonProgress> FeedbackHistory { get; set; } = new List<LessonProgress>();

    protected override async Task OnInitializedAsync()
    {
        await LoadFeedback();
    }

    private async Task LoadFeedback()
    {
        var feedback = await LessonProgressService.GetLessonProgressesForFeedbackAsync();
        AwaitingFeedback?.Clear();
        if (feedback == null) return;
        AwaitingFeedback = feedback.Where(lp => lp.FeedbackStatus == "Waiting").ToList();
        FeedbackHistory = feedback.Where(lp => lp.FeedbackStatus != "Waiting").ToList();
    }

    private void ProcessFeedback(int id)
    {
        NavigationManager.NavigateTo($"/admin/adminpages/processfeedback/{id}");
    }
}

@page "/admin/adminpages/coursemanager"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [StreamRendering]

<div class="t-flex t-flex-col text-center t-mt-8">
    <h3 class="t-text-gray-600 t-text-2xl t-font-bold t-leading-none t-tracking-tight md:t-text-4xl">Course Manager</h3>
    <p class="t-mt-1 t-text-lg t-font-normal t-text-gray-500 dark:t-text-gray-400">Create and manage courses.</p>
    <div class="t-mx-4 md:t-mx-20 t-mt-4 t-mb-4 t-flex t-justify-center">
        <button type="button" @onclick="OpenCourseBuilder" class="t-text-white t-mx-auto t-bg-gradient-to-br t-from-green-400 t-to-blue-600 hover:t-bg-gradient-to-bl focus:t-ring-4 focus:t-outline-none focus:t-ring-green-200 t-font-medium t-rounded-lg t-text-sm t-w-64 t-px-5 t-py-2.5">Create New Course</button>
    </div>
    <hr class="t-h-1 t-mx-4 md:t-mx-20 t-my-4 t-bg-gray-800 t-border-4 t-rounded md:t-my-2">
</div>

<div class="t-mt-4 t-relative t-overflow-x-auto t-shadow-md sm:t-rounded-lg">
    <table class="t-w-full t-text-sm t-text-left rtl:t-text-right t-text-gray-500 dark:t-text-gray-400">
        <caption class="t-caption-top t-p-5 t-text-lg t-font-semibold t-border t-rounded-t-lg t-text-left rtl:t-text-right t-text-gray-900 t-bg-white dark:t-text-white dark:t-bg-gray-800">
            Draft Courses
            <p class="t-mt-1 t-text-sm t-font-normal t-text-gray-500 dark:t-text-gray-400">Browse a list of Flowbite products designed to help you work and play, stay organized, get answers, keep in touch, grow your business, and more.</p>
        </caption>
        <thead class="t-text-xs t-text-gray-700 t-uppercase t-bg-gray-50 dark:t-bg-gray-700 dark:t-text-gray-400">
            <tr>
                <th scope="col" class="t-px-6 t-py-3">
                    Course Title
                </th>
                <th scope="col" class="t-px-6 t-py-3">
                    Description
                </th>
                <th scope="col" class="t-px-6 t-py-3">
                    Price
                </th>
                <th scope="col" class="t-px-6 t-py-3">
                    Access Level
                </th>
                <th scope="col" class="t-px-6 t-py-3">
                    <span class="t-sr-only">Edit</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in coursesDraft)
            {
                <tr class="t-bg-white t-border-b dark:t-bg-gray-800 hover:t-bg-gray-50 dark:t-border-gray-700">
                    <th scope="row" class="t-px-6 t-py-4 t-font-medium t-text-gray-900 t-whitespace-nowrap dark:t-text-white">
                        @course.Title
                    </th>
                    <td class="t-px-6 t-py-4">
                        <p class="t-line-clamp-2">@course.Description</p>
                    </td>
                    <td class="t-px-6 t-py-4">
                        £@decimal.Round(course.Price, 2)
                    </td>
                    <td class="t-px-6 t-py-4">
                        @course.AccessLevel
                    </td>
                    <td class="t-px-6 t-py-4 t-text-right">
                        <a @onclick="() => EditCourse(course.CourseId, course.IsActive)" class="t-font-medium t-text-blue-600 t-cursor-pointer dark:t-text-blue-500 hover:t-underline">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="t-mt-14 t-mb-10 t-relative t-overflow-x-auto t-shadow-md sm:t-rounded-lg">
    <table class="t-w-full t-text-sm t-text-left rtl:t-text-right t-text-gray-500 dark:t-text-gray-400">
        <caption class="t-caption-top t-p-5 t-text-lg t-font-semibold t-border t-rounded-t-lg t-text-left rtl:t-text-right t-text-gray-900 t-bg-white dark:t-text-white dark:t-bg-gray-800">
            Published Courses
            <p class="t-mt-1 t-text-sm t-font-normal t-text-gray-500 dark:t-text-gray-400">Browse a list of Flowbite products designed to help you work and play, stay organized, get answers, keep in touch, grow your business, and more.</p>
        </caption>
        <thead class="t-text-xs t-text-gray-700 t-uppercase t-bg-gray-50 dark:t-bg-gray-700 dark:t-text-gray-400">
            <tr>
                <th scope="col" class="t-px-6 t-py-3">
                    Course Title
                </th>
                <th scope="col" class="t-px-6 t-py-3">
                    Description
                </th>
                <th scope="col" class="t-px-6 t-py-3">
                    Price
                </th>
                <th scope="col" class="t-px-6 t-py-3">
                    Access Level
                </th>
                <th scope="col" class="t-px-6 t-py-3">
                    <span class="t-sr-only">Edit</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in coursesPublished)
            {
                <tr class="t-bg-white t-border-b dark:t-bg-gray-800 hover:t-bg-gray-50 dark:t-border-gray-700">
                    <th scope="row" class="t-px-6 t-py-4 t-font-medium t-text-gray-900 t-whitespace-nowrap dark:t-text-white">
                        @course.Title
                    </th>
                    <td class="t-px-6 t-py-4">
                        <p class="t-line-clamp-2">@course.Description</p>
                    </td>
                    <td class="t-px-6 t-py-4">
                        £@decimal.Round(course.Price, 2)
                    </td>
                    <td class="t-px-6 t-py-4">
                        @course.AccessLevel
                    </td>
                    <td class="t-px-6 t-py-4 t-text-right">
                        <a @onclick="() => EditCourse(course.CourseId, course.IsActive)" class="t-font-medium t-text-blue-600 t-cursor-pointer dark:t-text-blue-500 hover:t-underline">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    List<Course> coursesDraft;
    List<Course> coursesPublished;

    protected override async Task OnInitializedAsync()
    {
        coursesDraft = new List<Course>();
        coursesPublished = new List<Course>();
        var coursesListPubl = await CourseService.GetPublishedCoursesAsync();
        var coursesListDraft = await CourseService.GetDraftCoursesAsync();
        coursesPublished.AddRange(coursesListPubl);
        coursesDraft.AddRange(coursesListDraft);
    }

    void OpenCourseBuilder()
    {
        NavigationManager.NavigateTo("/admin/adminpages/initializenewcourse");
    }

    void EditCourse(int courseId, bool publishedCourse)
    {
        BuilderState.CourseId = courseId;
        BuilderState.IsActive = publishedCourse;
        NavigationManager.NavigateTo($"/admin/adminpages/coursebuilder/{courseId}");
    }
}

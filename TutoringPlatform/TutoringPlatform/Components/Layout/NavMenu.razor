@implements IDisposable
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<nav class="t-bg-white dark:t-bg-gray-900 t-fixed t-w-full t-z-20 t-top-0 start-0 t-border-b t-border-gray-200 dark:t-border-gray-600">
    <div class="t-max-w-screen-xl t-flex t-flex-wrap t-items-center t-justify-between t-mx-auto t-p-4">
        <a href="#" class="t-flex t-items-center t-space-x-3 rtl:t-space-x-reverse">
            @* <img src="https://flowbite.com/docs/images/logo.svg" class="t-h-8" alt="Flowbite Logo"> *@
            <span class="t-self-center t-text-2xl t-font-semibold t-whitespace-nowrap dark:t-text-white">Tutoring</span>
        </a>
        <div class="t-flex t-items-center lg:t-order-2 t-space-x-1 lg:t-space-x-2 rtl:t-space-x-reverse">
            <AuthorizeView>
                <Authorized>
                    <form>
                        <input type="hidden" />
                        <a href="Profile/ProfilePages/info" class="t-text-gray-800 dark:t-text-white hover:t-bg-gray-50 focus:t-ring-4 focus:t-ring-gray-300 t-font-medium t-rounded-lg t-text-sm t-px-4 t-py-2 md:t-px-5 md:t-py-2.5 dark:hover:t-bg-gray-700 focus:t-outline-none dark:focus:t-ring-gray-800">My Profile</a>
                    </form>
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="t-text-gray-800 dark:t-text-white hover:t-bg-gray-50 focus:t-ring-4 focus:t-ring-gray-300 t-font-medium t-rounded-lg t-text-sm t-px-4 t-py-2 md:t-px-5 md:t-py-2.5 dark:hover:t-bg-gray-700 focus:t-outline-none dark:focus:t-ring-gray-800 inline-flex items-center justify-center gap-2">
                             Logout
                        </button>
                    </form>
                </Authorized>
                <NotAuthorized>
                    <a href="Account/Login" class="t-text-gray-800 dark:t-text-white hover:t-bg-gray-50 focus:t-ring-4 focus:t-ring-gray-300 t-font-medium t-rounded-lg t-text-sm t-px-4 t-py-2 md:t-px-5 md:t-py-2.5 dark:hover:t-bg-gray-700 focus:t-outline-none dark:focus:t-ring-gray-800">Login</a>
                    <a href="Account/Register" class="t-text-white t-bg-gradient-to-br t-from-green-400 t-to-blue-600 hover:t-bg-gradient-to-bl focus:t-ring-4 focus:t-outline-none focus:t-ring-green-200 t-font-medium t-rounded-lg t-text-sm t-px-4 t-py-2 md:t-px-5 md:t-py-2.5 focus:t-outline-none">Sign up</a>
                </NotAuthorized>
            </AuthorizeView>
            <button @onclick="ToggleNavbar" data-collapse-toggle="navbar-sticky" type="button" class="t-inline-flex t-items-center t-p-2 t-w-10 t-h-10 t-justify-center t-text-sm t-text-gray-500 t-rounded-lg lg:t-hidden hover:t-bg-gray-100 focus:t-outline-none focus:t-ring-2 focus:t-ring-gray-200 dark:t-text-gray-400 dark:hover:t-bg-gray-700 dark:focus:t-ring-gray-600" aria-controls="navbar-sticky" aria-expanded="false">
                <span class="t-sr-only">Open main menu</span>
                <svg class="t-w-5 t-h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15" />
                </svg>
            </button>
        </div>
        <div class="@GetNavbarClass()" id="navbar-sticky">
            <ul class="t-flex t-flex-col t-p-4 lg:t-p-0 t-mt-4 t-font-medium t-border t-border-gray-100 t-rounded-lg t-bg-gray-50 lg:t-space-x-8 rtl:t-space-x-reverse lg:t-flex-row lg:t-mt-0 lg:t-border-0 lg:t-bg-white dark:t-bg-gray-800 lg:dark:t-bg-gray-900 dark:t-border-gray-700">
                <li>
                    <a href="#" class="@GetNavLinkClass("#")">Home</a>
                </li>
                <li>
                    <a href="browse" class="@GetNavLinkClass("browse")">Courses</a>
                </li>
                <AuthorizeView>
                    <Authorized>
                        <li>
                            <a href="mycourses" class="@GetNavLinkClass("mycourses")">My Courses</a>
                        </li>
                        <li>
                            <a href="feedback" class="@GetNavLinkClass("feedback")">Feedback</a>
                        </li>
                        <li>
                            <a href="cart" class="@GetNavLinkClass("cart")">Cart</a>
                        </li>
                    </Authorized>
                </AuthorizeView>
                <li>
                    <a href="about" class="@GetNavLinkClass("about")">About</a>
                </li>
                <li>
                    <a href="contacts" class="@GetNavLinkClass("contacts")">Contacts</a>
                </li>
                <AuthorizeView Roles="Admin">
                    <li>
                        <a href="/admin/adminpages" class="@GetNavLinkClass("admin")">Admin Panel</a>
                    </li>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    private bool isNavbarCollapsed = true;

    private void ToggleNavbar()
    {
        isNavbarCollapsed = !isNavbarCollapsed;
    }

    private string GetNavbarClass()
    {
        string baseClasses = "t-items-center t-justify-between t-w-full lg:t-flex lg:t-w-auto lg:t-order-1";
        if (isNavbarCollapsed)
        {
            return $"{baseClasses} t-hidden";
        }
        else
        {
            return baseClasses;
        }
    }

    private string GetNavLinkClass(string href)
    {
        return currentUrl.Contains(href, StringComparison.OrdinalIgnoreCase) ? 
        "t-block t-py-2 t-px-3 t-text-white t-bg-blue-700 t-rounded lg:t-bg-transparent lg:t-text-blue-700 lg:t-p-0 lg:dark:t-text-blue-500" : 
        "t-block t-py-2 t-px-3 t-text-gray-900 t-rounded hover:t-bg-gray-100 lg:hover:t-bg-transparent lg:hover:t-text-blue-700 lg:t-p-0 lg:dark:hover:t-text-blue-500 dark:t-text-white dark:hover:t-bg-gray-700 dark:hover:t-text-white lg:dark:hover:t-bg-transparent dark:t-border-gray-700";
    }

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
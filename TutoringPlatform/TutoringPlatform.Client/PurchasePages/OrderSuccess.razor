@page "/order-success"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<p class="t-mt-16 t-mb-10 t-text-center t-text-3xl t-font-extrabold t-leading-none t-tracking-tight t-text-gray-900 lg:t-text-4xl dark:t-text-white"><mark class="t-px-2 t-text-white t-bg-gradient-to-br t-from-green-400 t-to-blue-600 t-rounded dark:t-bg-blue-500">Order Success</mark></p>
<p class="t-mb-4 t-mt-4 t-text-lg t-text-center t-font-normal t-text-gray-500 dark:t-text-gray-400">Thank you for your order. Purchased course is now available in <strong class="t-font-semibold t-text-gray-900 dark:t-text-white">My Courses library.</strong></p>

@code {
    List<Order> MyCartOrders = new();
    private string CurUserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        CurUserId = user.FindFirstValue(ClaimTypes.NameIdentifier);

        MyCartOrders = await CartService.MyOrders(CurUserId);

        await ProcessOrdersAndEnrollments();

        await CartService.DeleteAllCartOrders();
    }

    public async Task ProcessOrdersAndEnrollments()
    {
        foreach (var order in MyCartOrders)
        {
            var firstLessonId = await CourseService.GetLessonIdForCourseAsync(order.CourseId, 1);
            order.OrderTime = DateTime.Now;

            var enrollment = new Enrollment()
            {
                UserId = CurUserId,
                CourseId = order.CourseId,
                LatestLessonId = firstLessonId,
                EnrollmentStatus = "In Progress"
            };

            await EnrollmentService.EnrollUserAsync(enrollment);
            await CreateProgressRecord(firstLessonId);
            await OrderService.AddOrderAsync(order);
        }
    }

    private async Task<LessonProgress> CreateProgressRecord(int lessonId)
    {
        var newProgress = new LessonProgress
            {
                UserId = CurUserId,
                LessonId = lessonId,
                LessonStatus = "In Progress"
            };

        return await LessonProgressService.AddLessonProgressRecordAsync(newProgress);
    }
}
